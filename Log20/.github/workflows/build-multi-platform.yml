name: Build and Test Log20
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        # Currently, only Windows configuration is supported
        os: [ windows-latest ]

        build_type: [ Release ]
        c_compiler: [ cl ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl


    steps:
    - uses: actions/checkout@v3

    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.2
      with: 
        version: 1.60.2
      
#    - name: Create default profile
#      run: conan profile new default --detect
      
#    - name: Update profile
#      run: conan profile update settings.compiler.version=17 default
      
#    - name: Install dependencies
#      run: conan install conanfile.txt -s build_type=${{ matrix.build_type }} --install-folder=${{ github.workspace }}/build --build=missing

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_LIBRARY_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_LIBRARY_TYPE.html?highlight=cmake_LIBRARY_TYPE
      run: cmake 
        -S ${{ github.workspace }}
        -B ${{ github.workspace }}/build
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_LIBRARY_TYPE=${{ matrix.build_type }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest --build-config ${{ matrix.build_type }} --test-dir ${{github.workspace}}/build/test --output-on-failure
